--- src-original/src/rust/cryptography-cffi/build.rs
+++ src/src/rust/cryptography-cffi/build.rs
@@ -49,16 +49,6 @@
     )
     .unwrap();
     println!("cargo:rustc-cfg=python_implementation=\"{python_impl}\"");
-    let python_includes = run_python_script(
-        &python,
-        "import os; \
-         import setuptools.dist; \
-         import setuptools.command.build_ext; \
-         b = setuptools.command.build_ext.build_ext(setuptools.dist.Distribution()); \
-         b.finalize_options(); \
-         print(os.pathsep.join(b.include_dirs), end='')",
-    )
-    .unwrap();
     let openssl_include =
         std::env::var_os("DEP_OPENSSL_INCLUDE").expect("unable to find openssl include path");
     let openssl_c = Path::new(&out_dir).join("_openssl.c");
@@ -67,14 +57,11 @@
     build
         .file(openssl_c)
         .include(openssl_include)
+        .include(format!("{}{}", std::env::var_os("OPENSSL_DIR").expect("OPENSSL_DIR must be set").to_str().unwrap(), "/include/python3.10"))
         .flag_if_supported("-Wconversion")
         .flag_if_supported("-Wno-error=sign-conversion")
         .flag_if_supported("-Wno-unused-parameter");
 
-    for python_include in env::split_paths(&python_includes) {
-        build.include(python_include);
-    }
-
     // Enable abi3 mode if we're not using PyPy.
     if python_impl != "PyPy" {
         // cp37 (Python 3.7 to help our grep when we some day drop 3.7 support)
